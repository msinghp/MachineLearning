fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
return(x$rev)
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
return(x[,c(2,3)])
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
return(x[,c(2,5)])
})
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
return(x[,c(2,4)])
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
return(x[,c(1,2,4)])
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
x <- x[order(x$pro) ,]
return(x[,c(1,2,4)])
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
x <- x[order(x$pro,x$fy) ,]
return(x[,c(1,2,4)])
})
l
fy <- c(2010,2011,2012,2010,2011,2012,2010,2011,2012)
co <- c("Apple","Apple","Apple","Apple","Google","Google","Microsoft", "Microsoft","Microsoft")
rev <- c(65225,108249,156508,29321,37905,50175,62484,69943,73723)
pro <- c(14013,25922,41733,8505,9737,10737,18760,23150,16978)
com <- data.frame(fy, co, rev, pro)
df <- split(com,com$co)
l  <-lapply(df,function(x) {
x <- x[order(x$pro, -x$fy) ,]
return(x[,c(1,2,4)])
})
l
f <- read.fwf("for",widths=c(12, 7,4, 9,4, 9,4, 9,4))
f
colnames(f)
f[,8]
sum(f[,8])
df <- f
df[] <- lapply(df, function(x) type.convert(as.character(x)))
aggregate(. ~ V1, df, sum)
aggregate(. ~ V1, df, sum)
df
colnames(df)
df[,8]
sum[,8]
sum(df[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x
colnames(x)
x$v8
x[,8]
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=0,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=5,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=6,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=20,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
Weekly SST data starts week centered on 3Jan1990
Nino1+2      Nino3        Nino34        Nino4
Week          SST SSTA     SST SSTA     SST SSTA     SST SSTA
sum(x[,8])
x <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
sum(x[,8])
q()
library(ggplot2)
library(lattice)
data <- read.csv(file="activity.csv",head=TRUE,sep=",",stringsAsFactors=FALSE)
dat <- as.Date(data$date,format="%Y-%m-%d")
data$date <- dat
data["daytype"] <- NA
for (x in 1:nrow(data))
{
if ((weekdays(data[x,2]) == "Saturday") | (weekdays(data[x,2]) == "Sunday")) { data[x,4] = "weekend" } else  {data[x,4] = "weekday"}
}
dat.f <- factor(data$daytype)
data$daytype <- dat.f
ag <- aggregate(steps ~ date, data = data, FUN = sum)
agint <- aggregate(steps ~ interval + daytype, data = data, FUN = mean)
library(ggplot2)
library(lattice)
data <- read.csv(file="activity.csv",head=TRUE,sep=",",stringsAsFactors=FALSE)
dat <- as.Date(data$date,format="%Y-%m-%d")
data$date <- dat
data["daytype"] <- NA
for (x in 1:nrow(data))
{
if ((weekdays(data[x,2]) == "Saturday") | (weekdays(data[x,2]) == "Sunday")) { data[x,4] = "weekend" } else  {data[x,4] = "weekday"}
}
dat.f <- factor(data$daytype)
data$daytype <- dat.f
ag <- aggregate(steps ~ date, data = data, FUN = sum)
agint <- aggregate(steps ~ interval, data = data, FUN = mean)
library(ggplot2)
library(lattice)
data <- read.csv(file="activity.csv",head=TRUE,sep=",",stringsAsFactors=FALSE)
dat <- as.Date(data$date,format="%Y-%m-%d")
data$date <- dat
data["daytype"] <- NA
for (x in 1:nrow(data))
{
if ((weekdays(data[x,2]) == "Saturday") | (weekdays(data[x,2]) == "Sunday")) { data[x,4] = "weekend" } else  {data[x,4] = "weekday"}
}
dat.f <- factor(data$daytype)
data$daytype <- dat.f
library(ggplot2)
library(lattice)
data <- read.csv(file="activity.csv",head=TRUE,sep=",",stringsAsFactors=FALSE)
dat <- as.Date(data$date,format="%Y-%m-%d")
data$date <- dat
data["daytype"] <- NA
for (x in 1:nrow(data))
{
if ((weekdays(data[x,2]) == "Saturday") | (weekdays(data[x,2]) == "Sunday")) { data[x,4] = "weekend" } else  {data[x,4] = "weekday"}
}
dat.f <- factor(data$daytype)
data$daytype <- dat.f
library(ggplot2)
library(lattice)
data <- read.csv(file="activity.csv",head=TRUE,sep=",",stringsAsFactors=FALSE)
dat <- as.Date(data$date,format="%Y-%m-%d")
data$date <- dat
data["daytype"] <- NA
for (x in 1:nrow(data))
{
conc <- c(0, 10, 20 ,30, 40, 50)
signal <- c(4, 22, 44, 60, 82)
conc
signal
lm(signal ~ conc)
conc <- c(10, 20 ,30, 40, 50)
signal <- c(4, 22, 44, 60, 82)
lm(signal ~ conc)
conc <- c(0,10, 20 ,30, 40, 50)
signal <- c(4, 22, 44, 60, 82)
lm(signal ~ conc)
lm(signal ~ conc,drop.unused.levels=TRUE)
conc <- c(0,10, 20 ,30, 40)
signal <- c(4, 22, 44, 60, 82)
lm(signal ~ conc)
lm.r = lm(signal ~ conc)
summary(lm.r)
coef(lm.r)
fitted(lm.r)
resid(lm.r)
layout(matrix(1:4,2,2))
plot(lm.r)
q()
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summar(fit)
summary(fit)
q()
attach(mtcars)
fit <- lm(mpg ~factor(cyl)+weight)
fit <- lm(mpg ~factor(cyl)+wt)
summary(fit)
fit <- lm(mpg ~factor(cyl))
summary(fit)
q()
mltest
mle
regression models maximum likelyhood
install.packages("epical")
?mle
?le
install.packages("epicalc")
lrtest
lrtest(m3, m1)
library(epicalc)
lrtest
fit <- lm(mpg ~factor(cyl)+w,data=mtcar)
fit <- lm(mpg ~factor(cyl)+w,data=mtcars)
fit <- lm(mpg ~factor(cyl)+wt,data=mtcars)
fit2 <- lm(mpg ~factor(cyl)*wt,data=mtcars)
mltest(fit,fit2)
lrtest(fit,fit2)
lrtest(fit,fit2)
fit
fit2
lrtest
lrtest(fit,fit2)
lrtest(fit,fit2,lrt=0)
lrtest(fit,fit2)
anovafit,fit2)
anova(fit,fit2)
require(lmtest)
install.packages("lmtest")
require(lmtest)
lrtest(fit,fit2)
fit3 <- lm(mpg ~factor(cyl):wt,data=mtcars)
fit3
lrtest(fit,fit3)
lrtest(fit,fit2)
q()
summary.lm(fit)
influence.measures(fit)
hatvalues(fit)
q()
fit
lm.influence(fit)
lm.influence(fit)$hat
dfbetas(fit)
lm.influence(fit)$hat
?lm.influence()
> plot(cooks.distance(fit), type = "h")
plot(cooks.distance(fit), type = "h")
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
> plot(cooks.distance(fit), type = "h")
plot(cooks.distance(fit), type = "h")
lm.influence(fit)$hat
plot(hat(model.matrix(fit3)), type = "h")
dfbetas(fit)
q()
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
dfbetaPlots(fit)
install.packages("car")
dfbetaPlots(fit)
library(car)
dfbetaPlots(fit)
dfbetas(fit)
dfbeta(fit)
hat(fit)
fit$hat
hatvalues(fit)
row.names(fit)
iknfluence(fit)
influence(fit)
l1<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
l2<-lm(mpg ~ factor(cyl)*wt, data = mtcars)
library(lmtest)
lrtest(l2,l1)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
sort(round(dfbeta(fit)[,2],3))
dfbeta(fit)
?dfbeta
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
tail(round(sort(hatvalues(fit)),4),1)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
sort(round(dfbeta(fit)[,2],3))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
sort(round(dfbeta(fit)[,2],3))
influence(fit)
q()
mfit <- lm(mpg ~factor(cyl) +wt)
mfit <- lm(mpg ~factor(cyl) +wt,data=mtcars)
summary(mfit)
names(mfit1)
names(mfit)
help(summary.lm)
summary(mfit)
mfit1 <- lm(mpg ~ factor(cyl), data = mtcars)
summary(mfit1)
summary(mfit)
summary(mfit1)
library(mtest)
lrtest
library(lmtest)
lrtest(mfit,mfit1)
lrtest(mfit1,mfit)
lrtest(mfit,mfit1)
lrtest(mfit1,mfit2)
lrtest(mfit1,mfit)
q()
coef(mfit)
coef(mfit1)
coef(mfit1 -1)
summary(mfit)$coeff
q()
#Q6
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit<-lm(y~x)
sort(round(dfbeta(fit)[,2],3))
mt
fit
fit1
l1<-lm(mpg ~ factor(cyl)+wt, data = mtcars)
l2<-lm(mpg ~ factor(cyl)*wt, data = mtcars)
names(l1)
l1$coefficients
l2$coefficients
l1$coefficients
l2$coefficients
q()
fit1 <- lm(mpg ~ factor(cyl), mtcars)
fit1 <- lm(mpg ~ factor(cyl)+wt, mtcars)
fit2 <- lm(mpg ~ factor(cyl)+wt, mtcars)
fit1 <- lm(mpg ~ factor(cyl), mtcars)
anova(fit1,fit2)
anova(fit1,fit2)
summary(fit1)
summary(fit2)
fit$coefficients
fit1$coefficients
fit2$coefficients
q()
fit1
fit2
anova(fit1,fit2)
q()
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
print(aggdata)
attach(mtcars)
aggdata <-aggregate(mtcars, by=list(cyl,vs),
FUN=mean, na.rm=TRUE)
print(aggdata)
aggdata <-aggregate(mtcars, mpg~cyl,mean)
aggdata <-aggregate(mpg~cyl,mean)
aggdata <-aggregate(mpg~cyl,mean,data=mtcars)
aggdata
aggdata <-aggregate(mpg~am,mean,data=mtcars)
aggdata
ag <-aggregate(mpg~am+cyl,mean,data=mtcars)
ag
data(mtcars)
at <-mtcars[am==0,]
am <-mtcars[am==1,]
t.test(at$mpg,am$mpg)
t.test(AT=at$mpg,MT=am$mpg)
t.test("AT"=at$mpg,"MT"=am$mpg)
t.test(at$mpg,am$mpg)
m <- lm(formula = mpg ~ wt + qsec + am, data = mtcars)
summary(m)
anova(m)
plot(m)
q()
q()
a <- lm(formula = mpg ~ wt + qsec + am, data = mtcars)
influence(a)
cooks.distance(a)
a$influence
q()
Regression Models
2 # Coursera
3 # Quiz 4
4 # Bastiaan Quast
5
6 # Question 1
7 library(MASS)
8 ?shuttle
9 data(shuttle)
10 str(shuttle)
11 names(shuttle)
12 ?glm
13 fit <- glm(use ~ wind, family='binomial', shuttle)
14 exp(fit$coeff)
15
16 # Question 2
17 fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
18 exp(fit$coeff)
19
20 # Question 3
21
22
23 # Question 4
24 data(InsectSprays)
25 outp <- exp(coef(glm(count ~ as.factor(spray) - 1, family="poisson", InsectSprays)))
26 outp
27 outp[1]/outp[2]
28
29 # Question 5
30 ?offset
31 log(10)
32
33 # Question 6
34 x <- -5:5
35 y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
36 plot(y ~ x)
37 d1 <- c(0, 0 ,0, 0, 0,  0,  1 , 1,  1 , 1 , 1)
38 d2 <- c(1, 1 ,1, 1, 1,  1,  0 , 0,  0, 0 , 0)
39 # y = c + d1 * x + d2 * x
40 summary(lm(y ~ d1*x))
Status
API
Training
Shop
Blog
About
library(MASS)
shuttle
data(shuttle)
str(shuttle)
names(shuttle)
glm
fit <- glm(use ~ wind, family='binomial', shuttle)
exp(fit$coeff)
fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
exp(fit$coeff)
q()
install.packages("AppliedPredictiveModeling")
install.packages("caret")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
adData = data.frame(predictors)
trainIndex = createDataPartition(diagnosis,p=0.5,list=FALSE)
training = adData[trainIndex,]
testing = adData[-trainIndex,]
testing
q()
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(975)
inTrain = createDataPartition(mixtures$CompressiveStrength,
p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
featurePlot(x = training[,c('Cement',
'BlastFurnaceSlag',
'FlyAsh',
'Water',
'Superplasticizer',
'CoarseAggregate',
'FineAggregate', 'Age')],
y = training$CompressiveStrength )
q()
setwd("C:/git/MachineLearning")
